$XdelayFactor : 0.3
$YdelayFactor: 0.2
$dotSize: 12px
$gridSize: 24px

.hero
  min-height: calc(100vh - 81px)
  position: relative
  overflow-x: clip  
  
  .container
    height: 100%
    display: flex
    flex-direction: column
    justify-content: center
    margin-top: 20vh
.hero__logo
  width: clamp(270px, 43vw, 550px)
  opacity: 0
  transform: translate(-120%)
  transition: opacity 1.7s, transform 2s

  &._active
    opacity: 1
    transform: translate(0)

  svg 
    width: 100%
    height: auto

.slogan
  font-family: 'Tahoma', sans-serif
  font-size: clamp(19px, 4vw, 38px)
  color: #656263
  margin-bottom: 15vh
  opacity: 0  
  transition: opacity 2.5s

  &._active
    opacity: 1  
   
.lines__wrapper 
  display: grid
  grid-template-columns: repeat(20, $gridSize)
  grid-template-rows: repeat(10, $gridSize)
  place-items: center
  position: absolute
  top: 40%
  right: 5%
  z-index: -5

.line
  width: 1200px
  height: 300px 
  animation: dot 120s calc(var(--delay1, 0s) + var(--delay2, 0s)) infinite ease-in-out

  @keyframes dot 
    from  
      transform: rotate(0deg) translateX($gridSize) 
    to  
      transform: rotate(1440deg) translateX($gridSize)
  

  @for $i from 0 to 15 
    &:nth-child(#{$i + 1}) 
      --hue: #{random() * 360}
      // --hue: #{360 / 400 * $i};
    
  

  @for $i from 0 to 20 
    &:nth-child(20n + #{$i + 1}) 
      --delay1: #{$i * $XdelayFactor * -1s}
    
    &:nth-child(n + #{20 * $i + 1}):nth-child(-n + #{20 * ($i + 1)}) 
      --delay2: #{$i * $YdelayFactor * -1s}

@media (max-width: 800px)
  .hero
    height: calc(100vh - 61px)
    .container
      margin-top: 0
  .lines__wrapper
    top: 60%  
